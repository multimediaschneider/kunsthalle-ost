// LogoMorpher.tsx
"use client";

import React, { useRef, useEffect, useState, useCallback } from "react";
import { animate } from "framer-motion";
import { interpolate } from "flubber";

// For Flubber to work, both shapes must be supplied as a single path string.
// If your logos are composed of multiple paths, you can combine them (for example, by
// concatenating the individual d strings with a space). (Make sure the resulting string
// represents a valid SVG path—you may need to tweak this manually.)
//
// Logo 1 comes from your first SVG:
const logo1Path = `
M38.64,30.55c0-7.37,1.45-9.49,1.45-9.49h-7.87s1.45,2.12,1.45,9.49l-.28,20.16c0,7.32-1.45,9.44-1.45,9.44h8.49s-1.68-2.12-1.68-9.44l-.06-9.16,19.1,18.6h8.21v-.33c-3.24-2.12-5.31-4.24-7.43-6.37l-14.86-14.46,12.62-11.9c2.29-2.01,4.91-4.47,7.87-5.7v-.39h-6.2l-19.32,18.21-.06-8.66Z
M71.58,60.15h8.27s-1.45-2.12-1.45-9.44l-.06-8.94h24.41l-.11,8.94c0,7.32-1.45,9.44-1.45,9.44h8.49s-1.68-2.12-1.68-9.44l-.11-20.16c0-7.37,1.45-9.49,1.45-9.49h-7.88s1.45,2.12,1.45,9.49l-.11,8.88h-24.46l-.06-8.88c0-7.37,1.45-9.49,1.45-9.49h-7.87c.06,0,1.45,2.12,1.45,9.49l-.28,20.16c0,7.32-1.45,9.44-1.45,9.44Z
M170.38,22.82c-10.01,0-15.39,7.64-15.39,17.76s5.39,17.64,15.39,17.64,15.33-7.58,15.33-17.64-5.33-17.76-15.33-17.76Z
M189.73,0H40.58C18.2,0,0,18.2,0,40.58s18.2,40.58,40.58,40.58h149.15c22.38,0,40.58-18.2,40.58-40.58S212.1,0,189.73,0ZM125.25,77.36H40.58c-20.28,0-36.78-16.5-36.78-36.78S20.3,3.8,40.58,3.8h84.67v73.56ZM170.38,63.55c-13.32,0-21.55-9.83-21.55-22.97s8.23-22.97,21.55-22.97,21.61,9.77,21.61,22.97-8.35,22.97-21.61,22.97Z
`;

// Logo 2 comes from your second SVG. Here we combine both groups of paths:
const logo2Path = `
M354.08-334.98c0-7.37,1.45-9.49,1.45-9.49h-7.87s1.45,2.12,1.45,9.49l-.28,20.16c0,7.32-1.45,9.44-1.45,9.44h8.49s-1.68-2.12-1.68-9.44l-.06-9.16,19.1,18.6h8.21v-.33c-3.24-2.12-5.31-4.24-7.43-6.37l-14.86-14.46,12.62-11.9c2.29-2.01,4.91-4.47,7.87-5.7v-.39h-6.2l-19.32,18.21-.06-8.66Z
M387.03-305.38h8.27s-1.45-2.12-1.45-9.44l-.06-8.94h24.41l-.11,8.94c0,7.32-1.45,9.44-1.45,9.44h8.49s-1.68-2.12-1.68-9.44l-.11-20.16c0-7.37,1.45-9.49,1.45-9.49h-7.88s1.45,2.12,1.45,9.49l-.11,8.88h-24.46l-.06-8.88c0-7.37,1.45-9.49,1.45-9.49h-7.87c.06,0,1.45,2.12,1.45,9.49l-.28,20.16c0,7.32-1.45,9.44-1.45,9.44Z
M485.83-342.72c-10.01,0-15.39,7.64-15.39,17.76s5.39,17.64,15.39,17.64,15.33-7.58,15.33-17.64-5.33-17.76-15.33-17.76Z
M505.17-365.54h-149.15c-22.38,0-40.58,18.2-40.58,40.58s18.2,40.58,40.58,40.58h149.15c22.38,0,40.58-18.2,40.58-40.58s-18.2-40.58-40.58-40.58ZM440.7-288.18h-84.67c-20.28,0-36.78-16.5-36.78-36.78s16.5-36.78,36.78-36.78h84.67v73.56ZM485.83-301.98c-13.32,0-21.55-9.83-21.55-22.97s8.23-22.97,21.55-22.97,21.61,9.77,21.61,22.97-8.35,22.97-21.61,22.97Z
M88,319.39l.5-36.1c0-13.2-2.6-17-2.6-17h14.1s-2.6,3.8-2.6,17l.1,15.5,34.6-32.6h11.1v.7c-5.3,2.2-10,6.6-14.1,10.2l-22.6,21.3,26.6,25.9c3.8,3.8,7.5,7.6,13.3,11.4v.6h-14.7l-34.2-33.3.1,16.4c0,13.1,3,16.9,3,16.9h-15.2s2.6-3.8,2.6-16.9Z
M157.75,284.39s-.7,2.6-.8,24.3v1.2c0,14.1,4.8,19.4,13.3,19.6,6.1,0,12.4-4.3,15.9-11.2v-16.6c0-14.7-2.3-17.3-2.3-17.3h11.6s-.8,2.6-.8,24.3l-.1,10c0,9.2,1.8,11.3,2.5,11.7v.1l-10.9,5.8v-12.9c-4.1,7-11.3,13.7-19.6,13.7-10.2,0-18.1-6.5-18.1-22.9v-12.5c-.4-14.7-2.3-17.3-2.3-17.3h11.6Z
M219.49,283.29v12.9c4.1-7,11.4-13.7,20-13.7,10.6,0,18.5,6.5,18.5,22.9v14c.4,14.7,2.3,16.9,2.3,16.9h-11.6s.7-2.2.8-23.9v-3.2c0-14.1-4.8-18.9-13.7-19.1-6.5,0-12.8,4.3-16.3,11.2v18.1c0,14.7,2.3,16.9,2.3,16.9h-11.6s.8-2.2.8-23.9l.1-11.5c0-10.3-2.3-11.7-2.7-11.7l11.1-5.9Z
M307.89,298.19h-.3c-4-7-11.5-9.7-18.2-9.7-6.2,0-11.1,1.7-11.1,6.3,0,3.9,2.5,6.3,12.1,9.8l3.7,1.4c13.6,5.3,16.9,9,16.9,15.4,0,8.3-7.4,15.7-20.3,15.7-8.7,0-17.3-4.1-21.7-8.4l1.1-11.8.2-.1c4,8.2,15.2,13.9,22.9,13.9s10.5-3.1,10.5-6.6c0-4.2-2.7-6.5-12.2-10.2l-4.8-1.7c-11.3-4.2-16-7.5-16-15.2s8.8-14.6,19.9-14.6c8.2,0,14.3,2.4,19.5,5.7l-2.2,10.1Z
M317.02,286.69c7.3-.8,14.6-8.4,18-16.3h.6v14.7l23-2-1,7.1-22-.7v25.4c0,12,5.4,16.1,11.6,16.1,5.6,0,10.5-3.1,13.2-10.3h.3v5.3c-2.6,7.4-9,11.3-16.6,11.3-9.8,0-17-6.1-17-17.2v-30.8l-10.1-.3v-2.3Z
M365.92,266.09l12.9-8.3v38.4c4.1-7,11.4-13.7,20-13.7,10.6,0,18.5,6.5,18.5,22.9v14c.4,14.7,2.3,16.9,2.3,16.9h-11.6s.7-2.2.8-23.9v-3.2c0-14.1-4.8-18.9-13.7-19.1-6.5,0-12.8,4.3-16.3,11.2v18.1c0,14.7,2.3,16.9,2.3,16.9h-11.6s.8-2.2.8-23.9v-37.8c0-7-3.2-8-4.4-8.2v-.3Z
M453,306.79c5.3,0,10.1.3,12.7.5-.6-13.6-5.6-17.8-14-17.8-6.8,0-13.7,5.6-17.5,13.7h-.2l-1.6-11c7.6-7.5,14.5-9.8,22.6-9.8,11,.1,19.2,6.6,19.2,23v14.3c0,10.5,2,12.6,2.8,13v.2l-11.6,4.4.1-13.1c-5.4,7.8-12.9,12.8-21.2,12.8-9.2,0-15.2-6.1-15.2-13.6,0-9.6,6.8-16.6,23.9-16.6ZM447.6,330.19c7.3,0,13.2-4.2,18-10.7l.1-9c-23.9.1-27.1,6.2-27.1,11.2,0,6.7,5.5,8.5,9,8.5Z
M499.82,257.79v61.6c0,14.7,3.2,16.9,3.2,16.9h-13.6s1.9-2.2,1.9-23.9v-29.5c0-14.2-2.5-16.3-3.9-16.5v-.5l12.4-8.1Z
M526.56,257.79v61.6c0,14.7,3.2,16.9,3.2,16.9h-13.6s1.9-2.2,1.9-23.9v-29.5c0-14.2-2.5-16.3-3.9-16.5v-.5l12.4-8.1Z
M565.55,282.19c12.7,0,22.4,9.2,22.4,28h-39.5c1,12.1,7.9,20.6,19,20.6,10.1,0,15.7-6.9,18.3-13h.2v5.5c-1.8,4.4-7.6,13.5-22.5,13.5-13.4,0-24.5-9.4-24.5-26.7,0-15.8,13.9-27.9,26.6-27.9ZM578.25,304.69c-1.3-12-7.2-16.7-16.6-16.7-7.9,0-13,5.1-13.3,18.1l29.9-1.4Z
M595.56,336.29v-12.6h12.6v12.6h-12.6Z
M646.01,337.49c-19.8,0-32.2-13.7-32.2-34.6s12.7-34.2,32.2-34.2,32.2,13,32.2,34.2-12.7,34.6-32.2,34.6ZM646.01,278.39c-11.2,0-20,8-20,24.5s8.8,24.9,20,24.9,20-8.4,20-24.9-8.7-24.5-20-24.5Z
M713.99,302.39c-1.1-4.8-5.5-7.7-11.7-7.7-5,0-9.2,1.8-9.2,5.1,0,3.1,3,4.8,7.6,5.8l5.8,1.2c10,2.2,18.5,5,18.5,14.6,0,10.4-9.8,16.1-21.4,16.1-12.9,0-21.2-7.3-22.2-16.2l10.8-1.6c.9,5.3,4.7,9.4,11.8,9.4,6.1,0,10.1-2.2,10.1-6.2s-4.3-5.4-9.4-6.5l-6.5-1.4c-8.6-1.8-15.6-5.3-15.6-14.5s9.3-14.2,20.5-14.2c10.3,0,19.4,5.1,21.3,14.7l-10.4,1.4ZM735.39,273.09h11.1v14.2h10v8.5h-10v25.4c0,5.1,1.2,6.3,5.9,6.3h4v8.8h-8.1c-10.7,0-12.9-2.9-12.9-13.1v-27.4h-7.4v-8.5h7.4v-14.2Z
`;

type SvgKey = "logo1" | "logo2";

const paths: Record<SvgKey, { color: string; d: string }> = {
  logo1: { color: "#1d1d1b", d: logo1Path },
  logo2: { color: "#1d1d1b", d: logo2Path },
};

export default function LogoMorpher() {
  const pathRef = useRef<SVGPathElement>(null);
  const [current, setCurrent] = useState<SvgKey>("logo1");

  // Wrap togglePath in useCallback so that it’s stable for useEffect.
  const togglePath = useCallback(() => {
    const next: SvgKey = current === "logo1" ? "logo2" : "logo1";
    if (pathRef.current) {
      const currentPathData =
        pathRef.current.getAttribute("d") || paths[current].d;
      // Create an interpolator function between the current and next paths.
      const interpolator = interpolate(currentPathData, paths[next].d, {
        maxSegmentLength: 0.1,
      });
      const duration = 0.5;
      animate(0, 1, {
        duration,
        onUpdate: (progress) => {
          if (pathRef.current) {
            pathRef.current.setAttribute("d", interpolator(progress));
          }
        },
      });
      animate(pathRef.current, { fill: paths[next].color }, { duration });
      setTimeout(() => {
        setCurrent(next);
      }, duration * 1000);
    }
  }, [current]);

  useEffect(() => {
    const interval = setInterval(togglePath, 1500);
    return () => clearInterval(interval);
  }, [togglePath]);

  // Adjust the viewBox so that both logos are visible.
  return (
    <svg width="600" height="600" viewBox="-50 -50 400 400">
      <path ref={pathRef} fill={paths[current].color} d={paths[current].d} />
    </svg>
  );
}
